<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.caRing.repository.ReservationMapper">
    
    <!-- 예약정보 출력 -->
    <select id="findAllRe" resultType="Reservation">
    	select * from reservation
    </select>
    
    <!-- 예약id로 예약정보 출력 -->
    <select id="findReservationByReservationId" resultType="Reservation">
    	select * from reservation where reservation_id = #{reservation_id}
    </select>
    
    
    <!-- 예약정보 저장 -->
    <insert id="saveRe">
    	<selectKey keyProperty="reservation_id" resultType="long" order="BEFORE">
			select seq_board.nextval from dual
		</selectKey>
		insert into reservation (
			reservation_id,
         	customer_email,
         	board_id,
         	total_price,
         	rent_start,
         	rent_end
       	) values (
			#{reservation_id},
			#{customer_email},
			#{board_id},
			#{total_price},
			#{rent_start},
			#{rent_end}
		)
    </insert>
    
    <!-- 보드id로 예약정보 출력 -->
     <select id="findReservationByHostEmail" resultType="Reservation">
       SELECT 
          r.RESERVATION_ID,
          r.RESERVATION_DATE,
          r.CUSTOMER_EMAIL,
          r.BOARD_ID,
          r.TOTAL_PRICE, 
          r.RENT_START,
          r.RENT_END,
          r.STATUS
      FROM 
         reservation r
      JOIN 
         board b ON r.BOARD_ID = b.BOARD_ID
      JOIN 
         host h ON b.HOST_EMAIL = h.HOST_EMAIL
      WHERE 
         b.host_email = #{host_email}
      order by
         rent_start DESC
    </select>
    
    <!-- 유저 예약 조회 -->
    <select id="findReservationByCustomerEmail" resultType="reservation">
       select * from reservation where customer_email = #{customer_email} order by reservation_id DESC
    </select>
    
    <update id="updateStatus">
    	update reservation set status = 4 where reservation_id = #{reservation_id}
    </update>
    
     <!-- 예약 정보 삭제 -->
    <delete id="deleteByReId">
        delete from reservation where reservation_id = #{reservation_id}
    </delete>
    
    <select id="findReservationByBoardId" resultType="reservation">
       	select * from reservation where board_id = #{board_id}
    </select>
   
</mapper>